import { CustomTextField } from '@/components/InputTextField'
import useFipeSearch from '@/hooks/useFipeSearch'
import {
  TableContainer,
  MainContainer,
  ConsultPriceButton,
  BackgroundSection,
} from '@/styles/pages/home'
import { Autocomplete } from '@mui/material'
import axios from 'axios'
import { GetStaticProps } from 'next'
import Head from 'next/head'
import Link from 'next/link'
import { useRouter } from 'next/router'
import { useState, useEffect } from 'react'

import BgDetails from '../assets/bg-details.svg'
import BgDetails2 from '../assets/bg-details2.svg'
import Image from 'next/image'

interface CarRequestProps {
  codigo: string
  nome: string
}

interface CarProps {
  nome: string
  codigo: string
}
interface HomeProps {
  carBrandsList: CarProps[]
}

export default function Home({ carBrandsList }: HomeProps) {
  const {
    carList,
    modelList,
    isLoading,
    error,
    selectCar,
    selectModel,
    selectYear,
    yearList,
  } = useFipeSearch()
  const [selectedBrand, setSelectedBrand] = useState<any>(null)
  const [selectedModel, setSelectedModel] = useState<any>(null)
  const [selectedYear, setSelectedYear] = useState<any>(null)

  const router = useRouter()

  useEffect(() => {
    if (selectedBrand) {
      selectCar(selectedBrand.codigo)
    }
  }, [selectedBrand, selectCar])

  useEffect(() => {
    if (selectedModel) {
      selectModel(selectedModel.codigo)
    }
  }, [selectedModel, selectModel])

  useEffect(() => {
    if (selectedYear) {
      selectYear(selectedYear.codigo)
    }
  }, [selectedYear, selectYear])

  const handleBrandChange = (event: any, value: string) => {
    setSelectedBrand(value)
    setSelectedModel(null)
    setSelectedYear(null)
  }

  const handleModelChange = (event: any, value: string) => {
    setSelectedModel(value)
  }

  const handleYearChange = (event: any, value: string) => {
    setSelectedYear(value)
  }

  // if (isLoading) {
  //   return <CircularProgress />
  // }

  if (error) {
    return <div>Error: {error.message}</div>
  }

  return (
    <>
      <Head>
        <title>Tabela Fipe Consulta - Front-End Test</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <MainContainer>
        <BackgroundSection>
          <Image src={BgDetails2} alt={''} />
          <Image src={BgDetails} alt={''} />
        </BackgroundSection>

        <h1>Tabela Fipe</h1>
        <h2>Consulte o valor de um veículo de forma gratuita</h2>

        <TableContainer>
          <Autocomplete
            className="auto-select"
            fullWidth
            options={carBrandsList}
            getOptionLabel={(option) => option.nome}
            value={selectedBrand}
            onChange={handleBrandChange}
            renderInput={(params) => (
              <CustomTextField {...params} label="Marca" variant="filled" />
            )}
          />
          <Autocomplete
            className="auto-select"
            fullWidth
            options={modelList}
            getOptionLabel={(option) => option.nome}
            value={selectedModel}
            onChange={handleModelChange}
            renderInput={(params) => (
              <CustomTextField {...params} label="Modelo" variant="filled" />
            )}
            disabled={!selectedBrand}
          />
          <Autocomplete
            fullWidth
            className="auto-select"
            options={yearList} // Example years
            getOptionLabel={(option) => option.nome}
            value={selectedYear}
            onChange={handleYearChange}
            renderInput={(params) => (
              <CustomTextField {...params} label="Ano" variant="filled" />
            )}
            disabled={!selectedModel}
            hidden={!selectedModel}
          />

          <ConsultPriceButton variant="contained" disabled={!selectedYear}>
            <Link
              href={{
                pathname: '/vehicle/[slug]',
                query: {
                  slug: selectedBrand?.nome,
                  marca: selectedBrand?.codigo,
                  modelo: selectedModel?.codigo,
                  ano: selectedYear?.codigo,
                },
              }}
            >
              Consultar Preço
            </Link>
          </ConsultPriceButton>
        </TableContainer>
      </MainContainer>
    </>
  )
}

export async function getStaticProps() {
  const response = await axios.get(
    'https://parallelum.com.br/fipe/api/v1/carros/marcas'
  )
  const carBrandsList = response.data

  return {
    props: {
      carBrandsList,
    },
    revalidate: 3600,
  }
}
